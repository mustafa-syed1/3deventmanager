using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace _3DInterface.core.Forms.DockableForms
{
    public class UIController
    {
        public static Form_Console formConsole;
        public static Form_Main formMain;
        public static ObjectsList formObject;
        public static MainController formRenderer;
        public static objApropForm objprop;
        public static Wellcome wellcomeForm;

        public UIController() { }

        public void setPeople(int v)
        {
            formMain.nPeople = v;
        }

        public UIController(Form_Console formConsole1, Form_Main formMain1, ObjectsList formObject1, MainController formRenderer1,objApropForm objprop1, Wellcome wellcomeForm1)
        {
            objprop = objprop1;
            formConsole = formConsole1;
            formMain = formMain1;
            formObject = formObject1;
            formRenderer = formRenderer1;
            wellcomeForm = wellcomeForm1;
        }

        public void FocusOnobj(string objName)
        {
            formRenderer.FocusOnobj(objName);
        }

        public void removeObjNode(string objName)
        {
            objprop.selectobjform.removeObjNode(objName);
            formRenderer.delete();
        }

        public void setUIProperties(string name, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, bool isEnabled)
        {
            objprop.prop.setProperties(name, posX, posY, posZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, isEnabled);
        }

        public void setUIObjProperties(string objName,float positionX, float positionY, float positionZ, float rotationX, float rotationY, float rotationZ, float scaleX, float scaleY, float scaleZ, bool istrigger)
        {
            objprop.prop.setProperties(objName, positionX, positionY, positionZ, rotationX, rotationY, rotationZ, scaleX, scaleY, scaleZ, istrigger);
        }

        public void addChild(string objName)
        {
            objprop.selectobjform.addChild(objName);
        }
        public void addObject(_3DObject _object)
        {
            formMain.project.projObjects.addObject(_object);
        }
        public void setProperties(string name,float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ)
        {
            formRenderer.setProperties(name,posX,posY,posZ,rotX,rotY,rotZ,scaleX,scaleY,scaleZ);
        }

        public void flipLeft()
        {
            objprop.prop.flipObjectLeft();
        }
        public void flipRight()
        {
            objprop.prop.flipObjectRight();
        }

        public void changeObjName(string newObjName)
        {
            string preObjName = formMain.currentSelectedObj.SelectedObj.ObjName;
            formRenderer.UpdateObjName(newObjName,preObjName);
            objprop.selectobjform.UpdateObjName(newObjName,preObjName);
            formMain.project.projObjects.UpdateObjName(newObjName,preObjName);
            formMain.currentSelectedObj.UpdateObjName(newObjName,preObjName);

        }

        public bool isNotValidName(string newObjName)
        {
            return formMain.project.projObjects.isNotValidObjName(newObjName);
        }

        public void loadProject(string projectPath)
        {
            _3Dproject project = new _3Dproject();
            project = project.Load_Project(projectPath);
            formMain.project = project;
        }

        public void setSelectedObj(string objName, float positionX, float positionY, float positionZ, float rotationX, float rotationY, float rotationZ, float scaleX, float scaleY, float scaleZ, bool istrigger)
        {
        //    objprop.selectobjform.getSelected(objName);

            formMain.currentSelectedObj.SelectedObj.ObjName = objName;
            formMain.currentSelectedObj.SelectedObj.PosX = positionX;
            formMain.currentSelectedObj.SelectedObj.PosY = positionY;
            formMain.currentSelectedObj.SelectedObj.PosZ = positionZ;
            formMain.currentSelectedObj.SelectedObj.RotX = rotationX;
            formMain.currentSelectedObj.SelectedObj.RotY = rotationY;
            formMain.currentSelectedObj.SelectedObj.RotZ = rotationZ;
            formMain.currentSelectedObj.SelectedObj.ScaleX = scaleX;
            formMain.currentSelectedObj.SelectedObj.ScaleY = scaleY;
            formMain.currentSelectedObj.SelectedObj.ScaleZ = scaleZ;
        }

        public void AutoGenerateDesign()
        {
            // Call to unity //  formRenderer.initiateWithParameters_R(string objName,float positionX, float positionY, float positionZ, float rotationX, float rotationY, float rotationZ, float scaleX, float scaleY, float scaleZ);
           // formRenderer.initiateWithParameters_R("chair1", 329.0f, 329.0f, 329.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
           // if we dont want to scale then simply give 0.0f and we dont want to rotate simply give 0.0f
        }
        public void selectObject(string objName)
        {
            formRenderer.selectObject(objName);
        }

        public void loadProjectObjects()
        {

            if (!formMain.isNew && formMain.project.projObjects.objSelected.Count > 0)
            {

                foreach (_3DObject obj in formMain.project.projObjects.objSelected)
                {
                    string[] objNameSplitter = obj.ObjID.Split('(');
                    string transformationParameters = objNameSplitter[0] + "#" + obj.ObjName + "#" + obj.PosX + "#" + obj.PosY + "#" + obj.PosZ + "#" + obj.RotX + "#" + obj.RotY + "#" + obj.RotZ + "#" + obj.ScaleX + "#" + obj.ScaleY + "#" + obj.ScaleZ;
                    Object[] ObjAttributes = new Object[] { transformationParameters };
                    formRenderer.LoadObjInUnity(ObjAttributes);
                    this.addChild(obj.ObjName); 
                }
            }
            else
            {
                if(formMain.project.hallName.Equals("Monal Hall"))
                {
                    selectObject("WeddingHall_1");
                }
                else if(formMain.project.hallName.Equals("The Weddings Hall"))
                {
                    selectObject("WeddingHall_2");
                }
            }
        }
    }
}